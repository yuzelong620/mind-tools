/*
 * ChildFieldFrame.java
 *
 * Created on __DATE__, __TIME__
 */

package xgame.tools.message;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.table.DefaultTableModel;

import org.apache.log4j.Logger;

import com.mind.xgame.excel2code.Excel2code;
import com.mind.xgame.tools.config.DataBaseType;
import com.mind.xgame.tools.config.DataBigType;
import com.mind.xgame.tools.config.ToolsConf;
import com.mind.xgame.tools.constants.ToolsConstants;
import com.mind.xgame.tools.util.WarningPanle;

/**
* This code was edited or generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED FOR
* THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED
* LEGALLY FOR ANY CORPORATE OR COMMERCIAL PURPOSE.
*/
/**
 *
 * @author __USER__
 */
public class MainFrame extends javax.swing.JFrame {

	private static final long serialVersionUID = 7533360807212578499L;
	private Vector<ModuleModel> moduleModels = new Vector<ModuleModel>();
	private ModuleModel currModule = null;
	private MessageModel currMessageModel = null;
	private WarningPanle warningPanle=null;
	
	/** Creates new form ChildFieldFrame */
	public MainFrame() {
		initComponents();
		initData();
		this.setLocationRelativeTo(null);
		warningPanle=new WarningPanle(this, true);
	}
	private static Vector<String> getColumnName(){
		Vector<String> columnsName = new Vector<String>();
		columnsName.add("类型");
		columnsName.add("名称");
		columnsName.add("desc");
		return columnsName;
	}
	private void showData() {
		this.jTable1.setModel(new DefaultTableModel(
				MessageModel.getColumnsData(currMessageModel),
				getColumnName()) {
			@Override
			public boolean isCellEditable(int row, int column) {
				if (column % 3 == 0) {
					return false;
				} else {
					return true;
				}
			}
		});
		if(this.currMessageModel!=null&&this.currMessageModel.getName()!=null
				&&this.currMessageModel.getName().length()>0
				&&!this.currMessageModel.getName().equals(ToolsConstants.NEW_MESSAGE_NAME)){
			this.MessageName.setText(this.currMessageModel.getName());	
		}
		if(this.currMessageModel!=null
				&&this.currMessageModel.getName()!=null
				&&this.currMessageModel.getName().length()>0
				&&!this.currMessageModel.getName().equals(ToolsConstants.NEW_MESSAGE_NAME)){
			this.jTextField4.setText(this.currMessageModel.getDesc());
		}
		if(this.currModule!=null
				&&this.currModule.getModuleName()!=null
				&&this.currModule.getModuleName().length()>0
				&&!this.currModule.getModuleName().equals(ToolsConstants.NEW_MODEL_NAME)){
			this.moduleName.setText(this.currModule.getModuleName());
		}
		
		
		
		
//		if(this.moduleModels.size()==0){
//			this.moduleCheckBox.setEnabled(false);
//			this.moduleCheckBox.setSelected(true);
//			this.moduleComboBox.setEnabled(false);
//		}
//		if(currModule.getMessageModels().size()==0){
//			this.messageComboBox.setEnabled(false);
//			this.messageCheckBox.setSelected(true);
//			this.messageCheckBox.setEnabled(false);
//		}
	}
	private void initData() {
		moduleModels= MessageUtil.loadMessages();
		if(moduleModels.size()>0){
			currModule=moduleModels.get(0);
		}else{
			currModule=new ModuleModel();
			currModule.setId(MessageUtil.createModuleId(moduleModels));
		}
		if(this.currModule.getMessageModels().size()==0){
			currMessageModel = MessageUtil.createNewMessageModel();
		}else{
			currMessageModel=this.currModule.getMessageModels().get(0);
		}
		
		
		showData();
		this.jComboBox1.setModel(new DefaultComboBoxModel(ToolsConf.getInstance().getDataBaseType().toArray()));
		this.messageComboBox.setModel(new DefaultComboBoxModel(currModule.getMessageModels()));
		this.moduleComboBox.setModel(new DefaultComboBoxModel<ModuleModel>(moduleModels));
		this.jComboBox4.setModel(new DefaultComboBoxModel(ToolsConf.getInstance().getDataBigTypes().toArray()));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jComboBox1 = new JComboBox();
		jLabel1 = new JLabel();
		jLabel2 = new JLabel();
		name = new JTextField();
		jLabel3 = new JLabel();
		jTextField2 = new JTextField();
		jScrollPane1 = new javax.swing.JScrollPane();
		{
			messageCheckBox = new JCheckBox();
			messageCheckBox.setText("\u65b0\u589e");
			messageCheckBox.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
					messageCheckBoxActionPerformed(evt);
				}
			});
		}
		{
			moduleCheckBox = new JCheckBox();
			moduleCheckBox.setText("\u65b0\u589e");
			moduleCheckBox.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
					moduleCheckBoxActionPerformed(evt);
				}
			});
		}
		{
			ComboBoxModel jComboBox4Model = 
					new DefaultComboBoxModel(
							new String[] { "基本类型", "协议","List" });
			jComboBox4 = new JComboBox();
			jComboBox4.setModel(jComboBox4Model);
			jComboBox4.setOpaque(false);
			jComboBox4.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
					jComboBox4ActionPerformed(evt);
				}
			});
		}
		{
			jLabel10 = new JLabel();
			jLabel10.setText("\u53d8\u91cf\u7c7b\u578b");
		}
		jTable1 = new javax.swing.JTable();
		addBtn = new javax.swing.JButton();
		delBtn = new javax.swing.JButton();
		saveBtn = new javax.swing.JButton();
		messageComboBox = new JComboBox();
		jLabel4 = new JLabel();
		MessageName = new JTextField();
		jLabel5 = new JLabel();
		jTextField4 = new JTextField();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setResizable(false);

		jComboBox1.setModel(new DefaultComboBoxModel(new String[] {
				"Item 1", "Item 2", "Item 3", "Item 4" }));
		jComboBox1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				jComboBox1ActionPerformed(evt);
			}
		});

		jLabel1.setText("\u5177\u4f53\u7c7b\u578b");

		jLabel2.setText("\u540d\u79f0");

		name.setName("name");

		jLabel3.setText("\u6ce8\u91ca\uff1a");

		jTable1.setFont(new java.awt.Font("微软雅黑", 0, 18));
		jTable1.setModel(new DefaultTableModel(
				new Object[][] { { null, null, null, null },
						{ null, null, null, null }, { null, null, null, null },
						{ null, null, null, null } }, new String[] { "Title 1",
						"Title 2", "Title 3", "Title 4" }));
		jTable1.setRowHeight(22);
		jScrollPane1.setViewportView(jTable1);

		addBtn.setText("add");
		addBtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				addBtnActionPerformed(evt);
			}
		});

		delBtn.setText("delete");
		delBtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				delBtnActionPerformed(evt);
			}
		});

		saveBtn.setText("save");
		{
			ComboBoxModel<ModuleModel> jComboBox3Model = 
					new DefaultComboBoxModel(
							new String[] { "Item One", "Item Two" });
			moduleComboBox = new JComboBox<ModuleModel>();
			moduleComboBox.addActionListener(new ActionListener() {
				public void actionPerformed(ActionEvent evt) {
					moduleComboBoxActionPerformed(evt);
				}
			});
			moduleComboBox.setModel(jComboBox3Model);
		}
		{
			moduleName = new JTextField();
			moduleName.setText("000");
		}
		{
			jLabel7 = new JLabel();
			jLabel7.setText("\u540d\u79f0");
		}
		{
			jLabel8 = new JLabel();
			jLabel8.setText("\u529f\u80fd\u6a21\u5757");
		}
		{
			jLabel9 = new JLabel();
			jLabel9.setText("\u534f        \u8bae");
		}
		saveBtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				saveBtnActionPerformed(evt);
			}
		});

		messageComboBox.setModel(new DefaultComboBoxModel(new String[] {
				"Item 1", "Item 2", "Item 3", "Item 4" }));
		messageComboBox.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				messageComboBoxItemStateChanged(evt);
			}
		});

		jLabel4.setText("\u540d\u79f0");

		jLabel5.setText("\u6ce8\u91ca\uff1a");

		GroupLayout layout = new GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setVerticalGroup(layout.createSequentialGroup()
			.addContainerGap()
			.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
			    .addComponent(moduleComboBox, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
			    .addComponent(jLabel8, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
//			    .addComponent(jTextField1, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
//			    .addComponent(jLabel6, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			    .addComponent(moduleName, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			    .addComponent(jLabel7, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			    .addComponent(moduleCheckBox, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, 18, GroupLayout.PREFERRED_SIZE))
			.addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
			.addGroup(layout.createParallelGroup()
			    .addGroup(GroupLayout.Alignment.LEADING, layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
			        .addComponent(messageComboBox, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			        .addComponent(MessageName, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			        .addComponent(jLabel4, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			        .addComponent(jLabel5, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			        .addComponent(jTextField4, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))
			    .addGroup(layout.createSequentialGroup()
			        .addGap(7)
			        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
			            .addComponent(messageCheckBox, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, 18, GroupLayout.PREFERRED_SIZE)
			            .addComponent(jLabel9, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))))
			.addGap(29)
			.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
			    .addComponent(jComboBox4, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
			    .addComponent(jComboBox1, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			    .addComponent(jLabel1, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			    .addComponent(jLabel10, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))
			.addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
			.addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
			    .addComponent(name, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			    .addComponent(jLabel2, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			    .addComponent(jLabel3, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			    .addComponent(jTextField2, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))
			.addGap(0, 40, GroupLayout.PREFERRED_SIZE)
			.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 439, GroupLayout.PREFERRED_SIZE)
			.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
			.addGroup(layout.createParallelGroup()
			    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			        .addComponent(saveBtn, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			        .addGap(0, 6, Short.MAX_VALUE))
			    .addGroup(layout.createSequentialGroup()
			        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 0, GroupLayout.PREFERRED_SIZE)
			        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
			            .addComponent(addBtn, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			            .addComponent(delBtn, GroupLayout.Alignment.BASELINE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))))
			.addContainerGap(48, 48));
		layout.setHorizontalGroup(layout.createSequentialGroup()
			.addContainerGap()
			.addGroup(layout.createParallelGroup()
			    .addGroup(layout.createSequentialGroup()
			        .addGroup(layout.createParallelGroup()
			            .addComponent(jLabel10, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
			            .addComponent(jLabel9, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
			            .addComponent(jLabel8, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE))
			        .addGap(7)
			        .addGroup(layout.createParallelGroup()
			            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			                .addComponent(jComboBox4, GroupLayout.PREFERRED_SIZE, 154, GroupLayout.PREFERRED_SIZE)
			                .addGap(62))
			            .addGroup(layout.createSequentialGroup()
			                .addGroup(layout.createParallelGroup()
			                    .addComponent(messageComboBox, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 132, GroupLayout.PREFERRED_SIZE)
			                    .addComponent(moduleComboBox, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 132, GroupLayout.PREFERRED_SIZE))
			                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
			                .addGroup(layout.createParallelGroup()
			                    .addComponent(messageCheckBox, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 72, GroupLayout.PREFERRED_SIZE)
			                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			                        .addComponent(moduleCheckBox, GroupLayout.PREFERRED_SIZE, 67, GroupLayout.PREFERRED_SIZE)
			                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)))))
			        .addGap(8)
			        .addGroup(layout.createParallelGroup()
			            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			                .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			                .addGap(40))
			            .addGroup(layout.createSequentialGroup()
			                .addGap(0, 0, Short.MAX_VALUE)
			                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE))
			            .addGroup(layout.createSequentialGroup()
			                .addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
			                .addGap(0, 0, Short.MAX_VALUE))
			            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			                .addComponent(jLabel7, GroupLayout.PREFERRED_SIZE, 60, GroupLayout.PREFERRED_SIZE)
			                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 0, Short.MAX_VALUE)))
			        .addGap(7)
			        .addGroup(layout.createParallelGroup()
			            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			                .addComponent(delBtn, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
			                .addGap(74))
			            .addComponent(name, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 165, GroupLayout.PREFERRED_SIZE)
			            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			                .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, 154, GroupLayout.PREFERRED_SIZE)
			                .addGap(11))
			            .addComponent(MessageName, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 165, GroupLayout.PREFERRED_SIZE)
			            .addComponent(moduleName, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 165, GroupLayout.PREFERRED_SIZE))
			        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
			        .addGroup(layout.createParallelGroup()
			            .addGroup(layout.createSequentialGroup()
			                .addGroup(layout.createParallelGroup()
			                    .addComponent(jLabel3, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE)
			                    .addComponent(jLabel5, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE, GroupLayout.PREFERRED_SIZE))
			                .addGap(8)
			                .addGroup(layout.createParallelGroup()
			                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			                        .addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, 164, GroupLayout.PREFERRED_SIZE)
			                        .addGap(53))
			                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			                        .addComponent(jTextField4, GroupLayout.PREFERRED_SIZE, 164, GroupLayout.PREFERRED_SIZE)
			                        .addGap(53))
			                    .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			                        .addGap(23)
			                        .addComponent(saveBtn, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
//			                        .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 103, GroupLayout.PREFERRED_SIZE)
			                        )))
//			            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
//			                .addGap(28)
//			                .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 89, GroupLayout.PREFERRED_SIZE)
//			                .addGap(144))
			                ))
			    .addGroup(layout.createSequentialGroup()
			        .addPreferredGap(jLabel10, jScrollPane1, LayoutStyle.ComponentPlacement.INDENT)
			        .addGroup(layout.createParallelGroup()
			            .addGroup(layout.createSequentialGroup()
			                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 734, GroupLayout.PREFERRED_SIZE)
			                .addGap(0, 0, Short.MAX_VALUE))
			            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
			                .addGap(36)
			                .addComponent(addBtn, GroupLayout.PREFERRED_SIZE, 91, GroupLayout.PREFERRED_SIZE)
			                .addGap(0, 607, Short.MAX_VALUE)))
			        .addGap(58))));

		pack();
		this.setSize(793, 751);
	}// </editor-fold>
	//GEN-END:initComponents

	private void messageComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {
		this.currMessageModel=(MessageModel) this.messageComboBox.getSelectedItem();
		showData();
	}
	private void saveBtnActionPerformed(ActionEvent evt) {
		try {
			File file = new File(ToolsConf.MESSAGE_FILE);
			if (!file.exists()) {
				file.createNewFile();
			}
			
			this.currMessageModel.setName(this.MessageName.getText());
			this.currMessageModel.setDesc(this.jTextField4.getText());
			this.currModule.setModuleName(this.moduleName.getText());
			
			short tmpId = 0;
			if(this.messageCheckBox.isSelected()){
				for(int i=this.currModule.getMessageModels().size()-1;i>=0;i--){
					MessageModel tmp = this.currModule.getMessageModels().get(i);
					if(tmp.getName().equalsIgnoreCase(this.currMessageModel.getName())){
						tmpId = tmp.getMessageType();
						this.currModule.getMessageModels().remove(i);
					}
				}
				this.currModule.getMessageModels().add(currMessageModel);
			}else{
				for(int i=this.currModule.getMessageModels().size()-1;i>=0;i--){
					MessageModel tmp = this.currModule.getMessageModels().get(i);
					if(tmp.getName().equalsIgnoreCase(this.currMessageModel.getName())){
						tmpId = tmp.getMessageType();
					}
				}
			}
			//已经有的messageType的就不重新生成了
			if(tmpId!=0){
				this.currMessageModel.setMessageType(tmpId);
			}else{
				this.currMessageModel.setMessageType(MessageUtil.createMessageType(currModule));
			}
			
			if(this.moduleCheckBox.isSelected()){
				for(int i=this.moduleModels.size()-1;i>=0;i--){
					if(this.moduleModels.get(i).getId()==this.currModule.getId()){
						this.moduleModels.remove(i);
					}
				}
				
				this.moduleModels.add(this.currModule);
			}
			MessageUtil.writeMessageFile(this.moduleModels);
		} catch (IOException e) {
			e.printStackTrace();
		}
		initData();
		System.out.println("save success....");
	}

	private void delBtnActionPerformed(ActionEvent evt) {
		if (this.jTable1.getSelectedRow() != -1) {
			DefaultTableModel model = (DefaultTableModel) this.jTable1
					.getModel();
			String filedName=(String) model.getValueAt(this.jTable1.getSelectedRow(), 1);
			model.removeRow(this.jTable1.getSelectedRow());
			for(int i=currMessageModel.getFields().size()-1;i>=0;i--){
				if(currMessageModel.getFields().get(i).getName()
						.equalsIgnoreCase(filedName)){
					currMessageModel.getFields().remove(i);
				}
			}
		}
	}

	private void addBtnActionPerformed(ActionEvent evt) {
		if (this.name.getText().trim().length() > 0) {
			DataBigType bigType=(DataBigType) jComboBox4.getSelectedItem();
			String javaType=null;
			String ccpType=null;
			switch(bigType.getValue()){
			case 0:
			case 1:
				DataBaseType baseType=	(DataBaseType) jComboBox1.getSelectedItem();
				javaType=baseType.getJavaType();
				ccpType=baseType.getCppType();
				break;
			case 2:
				MessageModel message=(MessageModel) jComboBox1.getSelectedItem();
				javaType=message.getName();
				ccpType=javaType+"*";
				break;
			case 3:
				message=(MessageModel) jComboBox1.getSelectedItem();
				javaType=message.getName();
				ccpType=javaType+"**";
				break;
			}
			
			FieldModel fieldModel = new FieldModel(bigType.getValue(),javaType,ccpType, this.name.getText().trim(), this.jTextField2
					.getText().trim());
			//nowField = fieldModel;
			if(this.moduleCheckBox.isSelected()){
				currModule=new ModuleModel();
				currModule.setId(MessageUtil.createModuleId(moduleModels));
				currMessageModel = MessageUtil.createNewMessageModel();
			}
			currMessageModel.getFields().add(fieldModel);
//			if (jComboBox1.getSelectedItem().equals(DataBaseType.List)) {
//				ChildDialog childDialog = new ChildDialog(this, this.name1
//						.getText().trim(), true);
//				childDialog.setVisible(true);
//				childDialog
//						.addWindowListener(new java.awt.event.WindowAdapter() {
//							public void windowClosed(
//									java.awt.event.WindowEvent e) {
//								nowField.setFields(((ChildDialog) e.getSource())
//										.getModels());
//								showData();
//								((ChildDialog) e.getSource()).setVisible(false);
//							}
//						});
//			}
			showData();
		}

	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		ToolsConf.getInstance().init();
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainFrame().setVisible(true);
			}
		});
	}
	
	private void jComboBox1ActionPerformed(ActionEvent evt) {
	}
	
	private void jComboBox4ActionPerformed(ActionEvent evt) {
		DataBigType bigType=(DataBigType) jComboBox4.getSelectedItem();
		switch(bigType.getValue()){
		case 0:
		case 1:
			this.jComboBox1
			.setModel(new DefaultComboBoxModel(ToolsConf.getInstance().getDataBaseType().toArray()));
			break;
		case 2:
			this.jComboBox1.setModel(new DefaultComboBoxModel(MessageUtil.getAllMessages(moduleModels)));
			break;
		case 3:
			this.jComboBox1.setModel(new DefaultComboBoxModel(MessageUtil.getAllMessages(moduleModels)));
			break;
		}
	}
	
	private void moduleCheckBoxActionPerformed(ActionEvent evt) {
		if(this.moduleCheckBox.isSelected()){
			this.moduleComboBox.setEnabled(false);
		}else{
			this.moduleComboBox.setEnabled(true);
		}
		showData();
	}
	
	private void messageCheckBoxActionPerformed(ActionEvent evt) {
		if(this.messageCheckBox.isSelected()){
			currMessageModel=new MessageModel();
			this.messageComboBox.setEnabled(false);
		}else{
			currMessageModel=this.currModule.getMessageModels().get(0);
			this.messageComboBox.setEnabled(true);
		}
		showData();
	}
	
	private void moduleComboBoxActionPerformed(ActionEvent evt) {
		ModuleModel moduleModel=(ModuleModel) moduleComboBox.getSelectedItem();		
		this.currModule=moduleModel;
		currMessageModel = currModule.getMessageModels().get(0);
		this.moduleName.setText(this.currModule.getModuleName());
		this.messageComboBox.setModel(new DefaultComboBoxModel(currModule.getMessageModels()));
		showData();
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton addBtn;
	private javax.swing.JButton delBtn;
	private javax.swing.JButton saveBtn;
	private JComboBox jComboBox1;
	private JComboBox messageComboBox;
	private JLabel jLabel1;
	private JLabel jLabel2;
	private JLabel jLabel3;
	private JLabel jLabel4;
	private JLabel jLabel5;
	private JComboBox jComboBox4;
	private JLabel jLabel9;
	private JLabel jLabel8;
	private JLabel jLabel7;
	private JTextField moduleName;
	private JCheckBox moduleCheckBox;
	private JCheckBox messageCheckBox;
	private JLabel jLabel10;
	private JComboBox<ModuleModel> moduleComboBox;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTable1;
	private JTextField jTextField2;
	private JTextField MessageName;
	private JTextField jTextField4;
	private JTextField name;
	// End of variables declaration//GEN-END:variables

}